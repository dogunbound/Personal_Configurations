Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-06-25T10:36:59-05:00

====== Graphs ======
Created Thursday 25 June 2020

Adjacency matrix
{{./pasted_image.png}}

adjacency list
{{./pasted_image001.png}}


Depth-first traversal
Start from source and go as far as you can along the path

Algorithm for DFT:
1. Mark node as visited
2. Visit the node
3. For each vertex u adjacent to v
	a. if u is not visitied
	b. start DFT at u

Have 2 functions for DFT. A master function, and a helper function:
dftMaster() {
	create boolean array of visited of size graphsize; initialize false
	for (i in visited)
		call dftHelper(index, visited);
}
dftHelper(index, visited[]) {
	visited[i] = true;
	for(i in adjacent to graph[i])
		if (visitied[i.index] â‰  true)
			dft(i.index, visited)
}





Breadth-first traversal
level by level

Algorithm for BFT:
1. For each vertex v in graph
	a. if v is not visited
	b. add v to queue and start BFT at v
2. Mark v as visited
3. While queue not empty
	a. remove vertex u from queue
	b. retrieve adjacent vertices
	c. for each w adjacent to u
		1. if w is not visited
			a. add w to queue
			b. mark w as visited






